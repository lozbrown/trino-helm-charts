apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.coordinator" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: coordinator
data:
  node.properties: |
    node.environment={{ .Values.server.node.environment }}
    node.data-dir={{ .Values.server.node.dataDir }}
    plugin.dir={{ .Values.server.node.pluginDir }}
  {{- range $configValue := .Values.additionalNodeProperties }}
    {{ $configValue }}
  {{- end }}

  jvm.config: |
    -server
    -agentpath:/usr/lib/trino/bin/libjvmkill.so
    -Xmx{{ .Values.coordinator.jvm.maxHeapSize }}
    -XX:+{{ .Values.coordinator.jvm.gcMethod.type }}
    -XX:G1HeapRegionSize={{ .Values.coordinator.jvm.gcMethod.g1.heapRegionSize }}
    -XX:+ExplicitGCInvokesConcurrent
    -XX:+HeapDumpOnOutOfMemoryError
    -XX:+ExitOnOutOfMemoryError
    -XX:-OmitStackTraceInFastThrow
    -XX:ReservedCodeCacheSize=512M
    -XX:PerMethodRecompilationCutoff=10000
    -XX:PerBytecodeRecompilationCutoff=10000
    -Djdk.attach.allowAttachSelf=true
    -Djdk.nio.maxCachedBufferSize=2000000
    # Allow loading dynamic agent used by JOL
    -XX:+EnableDynamicAgentLoading
  {{/* only check the version number if the image is not overriden in any way */}}
  {{- with .Values.image -}}
  {{- if and (eq .repository "trinodb/trino") (not .useRepositoryAsSoleImageReference) (not .registry) (not .digest) (gt (default $.Chart.AppVersion .tag | int ) 447 ) }}
    # https://bugs.openjdk.org/browse/JDK-8329528
    -XX:+UnlockDiagnosticVMOptions
    -XX:G1NumCollectionsKeepPinned=10000000
  {{- end }}{{/* if */}}
  {{- end }}{{/* with */}}
  {{- range $configValue := .Values.coordinator.additionalJVMConfig }}
    {{ $configValue }}
  {{- end }}
  {{- if .Values.jmx.enabled }}
    -Dcom.sun.management.jmxremote.rmi.port={{ .Values.jmx.serverPort }}
  {{- end }}

  config.properties: |
    coordinator=true
    {{- if gt (int .Values.server.workers) 0 }}
    node-scheduler.include-coordinator=false
    {{- else }}
    node-scheduler.include-coordinator=true
    {{- end }}
    http-server.http.port={{ .Values.service.port }}
    query.max-memory={{ .Values.server.config.query.maxMemory }}
    query.max-memory-per-node={{ .Values.coordinator.config.query.maxMemoryPerNode }}
    {{- if .Values.coordinator.config.memory.heapHeadroomPerNode }}
    memory.heap-headroom-per-node={{ .Values.coordinator.config.memory.heapHeadroomPerNode }}
    {{- end }}
    discovery.uri=http://localhost:{{ .Values.service.port }}
    {{- if .Values.server.config.authenticationType }}
    http-server.authentication.type={{ .Values.server.config.authenticationType }}
    {{- end }}
    {{- range $configValue := .Values.additionalConfigProperties }}
    {{ $configValue }}
    {{- end }}
    {{- if .Values.server.config.https.enabled }}
    http-server.https.enabled=true
    http-server.https.port={{ .Values.server.config.https.port }}
    http-server.https.keystore.path={{ .Values.server.config.https.keystore.path }}
    {{- end }}
    {{- if .Values.jmx.enabled }}
    jmx.rmiregistry.port={{ .Values.jmx.registryPort }}
    jmx.rmiserver.port={{ .Values.jmx.serverPort }}
    {{- end }}
    {{- if .Values.server.coordinatorExtraConfig }}
    {{- .Values.server.coordinatorExtraConfig | nindent 4 }}
    {{- end }}

{{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "ranger" }}
  access-control.properties: |
    access-control.name=file
    {{- if .Values.accessControl.refreshPeriod }}
    security.refresh-period={{ .Values.accessControl.refreshPeriod }}
    {{- end }}
    ranger.security_config={{ .Values.server.config.path }}/access-control/{{ .Values.ranger.security_config | default "ranger-trino-security.xml" }}
    ranger.audit_config={{ .Values.server.config.path }}/access-control/{{ .Values.ranger.audit_config | default "ranger-trino-audit.xml" }}
    ranger.policy_mgr_ssl_config={{ .Values.server.config.path }}/access-control/{{ .Values.ranger.policy_mgr_ssl_config | default "ranger-trino-policymgr-ssl.xml" }}
{{- end }}
{{- if eq .Values.accessControl.type "configmap" }}
  access-control.properties: |
    access-control.name=file
    {{- if .Values.accessControl.refreshPeriod }}
    security.refresh-period={{ .Values.accessControl.refreshPeriod }}
    {{- end }}
    security.config-file={{ .Values.server.config.path }}/access-control/{{ .Values.accessControl.configFile | default "rules.json" }}
{{- end }}{{- end }}

{{- if .Values.resourceGroups }}
  resource-groups.properties: |
    resource-groups.configuration-manager=file
    resource-groups.config-file={{ .Values.server.config.path }}/resource-groups/resource-groups.json
{{- end }}

  exchange-manager.properties: |
    exchange-manager.name={{ .Values.server.exchangeManager.name }}
  {{ if eq .Values.server.exchangeManager.name "filesystem" }}
    exchange.base-directories={{ .Values.server.exchangeManager.baseDir }}
  {{- end }}
  {{- range $configValue := .Values.additionalExchangeManagerProperties }}
    {{ $configValue }}
  {{- end }}

  log.properties: |
    io.trino={{ .Values.server.log.trino.level }}
  {{- range $configValue := .Values.additionalLogProperties }}
    {{ $configValue }}
  {{- end }}

  {{- if contains "PASSWORD" .Values.server.config.authenticationType }}
  password-authenticator.properties: |
    password-authenticator.name=file
    file.password-file={{ .Values.server.config.path }}/auth/password.db
  {{- end }}
  {{- if .Values.auth.groups }}{{- if not (index .Values.coordinator.additionalConfigFiles "group-provider.properties") }}
  group-provider.properties: |
    group-provider.name=file
    file.group-file={{ .Values.server.config.path }}/auth/group.db
    {{- if .Values.auth.refreshPeriod }}
    file.refresh-period={{ .Values.auth.refreshPeriod }}
    {{- end }}
  {{- end }}{{- end }}

{{ if .Values.eventListenerProperties }}
  event-listener.properties: |
  {{- range $configValue := .Values.eventListenerProperties }}
    {{ $configValue }}
  {{- end }}
{{ end }}

{{- range $fileName, $fileContent := .Values.coordinator.additionalConfigFiles }}
  {{ $fileName }}: |
    {{- $fileContent | nindent 4 }}
{{- end }}

---

{{- if .Values.accessControl }}{{- if eq .Values.accessControl.type "configmap" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.fullname" . }}-access-control-volume-coordinator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: coordinator
data:
  {{- range $key, $val := .Values.accessControl.rules }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
{{- end }}
{{- if eq .Values.accessControl.type "ranger" }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.fullname" . }}-access-control-volume-coordinator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: coordinator
data:
  {{ .Values.ranger.security_config | default "ranger-trino-security.xml" }}:  |
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration xmlns:xi="http://www.w3.org/2001/XInclude">
      <property>
        <name>ranger.plugin.trino.policy.rest.url</name>
        <value>{{ .Values.ranger.host_uri }}</value>
        <description>MANDATORY: a comma separated list of URLs to Apache Ranger instances in a deployment</description>
      </property>
      <property>
        <name>ranger.plugin.trino.access.cluster.name</name>
        <value>{{ .Values.ranger.cluster_name | default "dev_trino" }}</value>
        <description>Name to identify the cluster running the Trino instance. This is recorded in audit logs generated by the plugin</description>
      </property>
      <property>
        <name>ranger.plugin.trino.use.rangerGroups</name>
        <value>{{ .Values.ranger.use_ranger_groups | default "false" }}</value>
        <description>Boolean flag to specify whether user-to-groups mapping should be obtained from in Apache Ranger. Default: false</description>
      </property>
      <property>
        <name>ranger.plugin.trino.use.only.rangerGroups</name>
        <value>{{ .Values.ranger.use_ranger_groups | default "false" }}</value>
        <description>Boolean flag. true: use user-to-groups mapping from Apache Ranger; false: use user-to-groups mappings from Apache Ranger and Trino. Default: false</description>
      </property>
      <property>
        <name>ranger.plugin.trino.super.users</name>
        <value>{{ .Values.ranger.super_users }}</value>
        <description>Comma separated list of user names. Superusers will be authorized for all accesses, without requiring explicit policy grants.</description>
      </property>
      <property>
        <name>ranger.plugin.trino.super.groups</name>
        <value>{{ .Values.ranger.super_groups }}</value>
        <description>Comma separated list of group names. Users in supergroups will be authorized for all accesses, without requiring explicit policy grants</description>
      </property>
    </configuration>

  {{ .Values.ranger.audit_config | default "ranger-trino-audit.xml" }}:  |
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration xmlns:xi="http://www.w3.org/2001/XInclude">
      <property>
        <name>xasecure.audit.is.enabled</name>
        <value>{{ .Values.ranger.audit_enabled | default "true" }}</value>
        <description>Boolean flag to specify if the plugin should generate access audit logs. Default: true</description>
      </property>
      {{- if .Values.ranger.solr_uri }}
      <property>
        <name>xasecure.audit.solr.is.enabled</name>
        <value>true</value>
        <description>Boolean flag to specify if audit logs should be stored in Solr. Default: false</description>
      </property>
      {{- end }}
      <property>
        <name>xasecure.audit.solr.solr_url</name>
        <value>{{ .Values.ranger.solr_uri }}</value>
        <description>URL to Solr deployment where the plugin should send access audits to</description>
      </property>
    </configuration>

  {{ .Values.ranger.policy_mgr_ssl_config | default "ranger-trino-policymgr-ssl.xml" }}:  |
    <?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
    <configuration xmlns:xi="http://www.w3.org/2001/XInclude">
      <!-- properties used for 2-way SSL between the Trino plugin and Apache Ranger server -->
      <property>
        <name>xasecure.policymgr.clientssl.keystore</name>
        <value></value>
        <description>Path to keystore file</description>
      </property>
      <property>
        <name>xasecure.policymgr.clientssl.keystore.type</name>
        <value>jks</value>
        <description>Type of keystore. Default: jks</description>
      </property>
      <property>
        <name>xasecure.policymgr.clientssl.keystore.credential.file</name>
        <value></value>
        <description>Path to credential file for the keystore; the credential should be in alias sslKeyStore</description>
      </property>
      <property>
        <name>xasecure.policymgr.clientssl.truststore</name>
        <value></value>
        <description>Path to truststore file</description>
      </property>
      <property>
        <name>xasecure.policymgr.clientssl.truststore.type</name>
        <value>jks</value>
        <description>Type of truststore. Default: jks</description>
      </property>
      <property>
        <name>xasecure.policymgr.clientssl.truststore.credential.file</name>
        <value></value>
        <description>Path to credential file for the truststore; the credential should be in alias sslTrustStore</description>
      </property>
    </configuration>
 
{{- end }}{{- end }}
{{- if .Values.resourceGroups }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.fullname" . }}-resource-groups-volume-coordinator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: coordinator
data:
  resource-groups.json: |-
    {{- .Values.resourceGroups.resourceGroupsConfig | nindent 4 }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "trino.fullname" . }}-schemas-volume-coordinator
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "trino.labels" . | nindent 4 }}
    app.kubernetes.io/component: coordinator
data:
  {{- range $key, $val := .Values.kafka.tableDescriptions }}
  {{ $key }}: {{ $val | quote }}
  {{- end }}
